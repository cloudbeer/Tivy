{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Stage.js","tivy.min.js","src/UIObject.js","src/UIObjectGroup.js","src/basic/Button.js","src/basic/ImageFrame.js","src/basic/Tile.js","src/components/Metro.js","src/components/Poster.js","src/events/KeyboardManager.js","src/src/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Tivy","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Stage","options","id","Date","position","x","y","size","width","height","background","zIndex","document","getElementById","canvas","createElement","style","top","left","body","appendChild","_stage","PIXI","Container","render","WebGLRenderer","transparent","view","forceFXAA","isStage","prototype","show","renderable","repaint","hide","uiObject","addChild","removeChild",2,"UIObject","stage","owner","Object","create","constructor","bringToFront","parent","sendToBack","addChildAt",3,"UIObjectGroup","container","controls","currentIndex","currentControl","attachEvent","push","indexOf","_this","on","oldIndex","oldCtr","emit","console","log","data","target","activate","isActive","./UIObject",4,"Button","textureDefault","textureDown","btnSprite","interactive","_paint","onPressDown","onPressUp","_texture","texture","Sprite","baseTexture","../UIObject",5,"ImageFrame","imageUrl","radius","borderLength","imageLength","_init","ttFrame","Texture","fromImage","cltTT","ctTT","crtTT","crTT","crbTT","cbTT","clbTT","clTT","clt","_clt","ct","_ct","crt","_crt","cr","_cr","crb","_crb","cb","_cb","clb","_clb","cl","_cl","setSize","newSize","nWidth","nHeight","setPosition","newPosition","setBounds","newBounds",6,"Tile","placeHolderTexture","showText","text","textColor","textBgColor","textHeight","font","posterTexture","imageSprite","textLabel","posterSetted","mask","Graphics","lineStyle","beginFill","drawRoundedRect","endFill","drawRect","Text","fill","setContent","imgUrl","destroy","reserveTexture","removeChildren",7,"Metro","layout","tiles","forEach","ele","tile","bindData","newData","../UIObjectGroup","../basic/Tile",8,"Poster",9,"KeyboardManager","addEventListener","keyboardEvent","deactivate","removeEventListener",10,"tivy","assign","./Stage","./UIObjectGroup","./basic/Button","./basic/ImageFrame","./basic/Tile","./components/Metro","./components/Poster","./events/KeyboardManager"],"mappings":"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","file":"tivy.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * A Stage represents a canvas and an empty PIXI DisplayObject.\n * You can add child into stage directly.\n * And it can be repainted alone.\n *\n * ```js\n * var stage = new Tivy.Stage({\n   *  id: 'stage01', //The canvas id\n   *  size:{width:500, height:400}, //Size of the stage, w is width, h is heigt\n   *  position:{x:0, y:0}, //Position of the stage\n   *  background: '#ccc', //Backgound of the canvas, it is a css style.\n   *  zIndex: 10 //z-index of the canvas, it is a css style.\n   * });\n * ```\n *\n * @class\n * @memberof Tivy\n * @param options {json} - config json object.\n * @constructor\n */\nvar Stage = function (options) {\n  if (!options) {\n    options = {};\n  }\n  this.id         = options.id || 'stage_' + new Date() * 1;\n  this.position   = options.position || {x: 0, y: 0};\n  this.size       = options.size || {width: 1920, height: 1080};\n  this.background = options.background;\n  this.zIndex     = options.zIndex || 0;\n\n  if (document.getElementById(this.id)) {\n    throw new Error('Stage id is dumplicate');\n  }\n\n\n  this.width  = this.size.width;\n  this.height = this.size.height;\n\n  var canvas              = document.createElement('canvas');\n  canvas.id               = this.id;\n  canvas.style.position   = 'absolute';\n  canvas.style.top        = this.position.y;\n  canvas.style.left       = this.position.x;\n  canvas.style.zIndex     = this.zIndex;\n  canvas.style.background = this.background;\n\n  document.body.appendChild(canvas);\n\n  var _stage = new PIXI.Container();\n  //_stage.screenX = this.position.x;\n  //_stage.screenY = this.position.y;\n  //_stage.width  = this.size.width;\n  //_stage.height = this.size.height;\n\n  this.render = new PIXI.WebGLRenderer(this.size.width, this.size.height, {\n    transparent: true,\n    view       : canvas,\n    //antialias: true,\n    forceFXAA  : true\n  });\n\n  _stage.id      = this.id;\n  _stage.isStage = true;\n\n  this._stage = _stage;\n\n};\n\nStage.prototype = {\n  /**\n   * Show the stage.\n   */\n  show: function () {\n    this.renderable = true;\n    this.repaint();\n  },\n  /**\n   * Hide the stage.\n   */\n  hide: function () {\n    this.renderable = false;\n    this.repaint();\n  },\n\n  /**\n   * 重绘\n   * @param uiObject {PIXI.DisplayObject} The object to repaint. if it is null, repaint this stage.\n   */\n  repaint: function (uiObject) {\n    if (uiObject) {\n      this.render.render(uiObject);\n    } else {\n      this.render.render(this._stage);\n    }\n  },\n\n  /**\n   * 增加子节点\n   * @param uiObject {PIXI.DisplayObject} The object to add.\n   */\n  addChild: function (uiObject) {\n    this._stage.addChild(uiObject);\n  },\n\n  removeChild: function (uiObject) {\n    this._stage.removeChild(uiObject);\n  }\n\n};\n\nmodule.exports = Stage;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Tivy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * A Stage represents a canvas and an empty PIXI DisplayObject.\n * You can add child into stage directly.\n * And it can be repainted alone.\n *\n * ```js\n * var stage = new Tivy.Stage({\n   *  id: 'stage01', //The canvas id\n   *  size:{width:500, height:400}, //Size of the stage, w is width, h is heigt\n   *  position:{x:0, y:0}, //Position of the stage\n   *  background: '#ccc', //Backgound of the canvas, it is a css style.\n   *  zIndex: 10 //z-index of the canvas, it is a css style.\n   * });\n * ```\n *\n * @class\n * @memberof Tivy\n * @param options {json} - config json object.\n * @constructor\n */\nvar Stage = function (options) {\n  if (!options) {\n    options = {};\n  }\n  this.id         = options.id || 'stage_' + new Date() * 1;\n  this.position   = options.position || {x: 0, y: 0};\n  this.size       = options.size || {width: 1920, height: 1080};\n  this.background = options.background;\n  this.zIndex     = options.zIndex || 0;\n\n  if (document.getElementById(this.id)) {\n    throw new Error('Stage id is dumplicate');\n  }\n\n\n  this.width  = this.size.width;\n  this.height = this.size.height;\n\n  var canvas              = document.createElement('canvas');\n  canvas.id               = this.id;\n  canvas.style.position   = 'absolute';\n  canvas.style.top        = this.position.y;\n  canvas.style.left       = this.position.x;\n  canvas.style.zIndex     = this.zIndex;\n  canvas.style.background = this.background;\n\n  document.body.appendChild(canvas);\n\n  var _stage = new PIXI.Container();\n  //_stage.screenX = this.position.x;\n  //_stage.screenY = this.position.y;\n  //_stage.width  = this.size.width;\n  //_stage.height = this.size.height;\n\n  this.render = new PIXI.WebGLRenderer(this.size.width, this.size.height, {\n    transparent: true,\n    view       : canvas,\n    //antialias: true,\n    forceFXAA  : true\n  });\n\n  _stage.id      = this.id;\n  _stage.isStage = true;\n\n  this._stage = _stage;\n\n};\n\nStage.prototype = {\n  /**\n   * Show the stage.\n   */\n  show: function () {\n    this.renderable = true;\n    this.repaint();\n  },\n  /**\n   * Hide the stage.\n   */\n  hide: function () {\n    this.renderable = false;\n    this.repaint();\n  },\n\n  /**\n   * 重绘\n   * @param uiObject {PIXI.DisplayObject} The object to repaint. if it is null, repaint this stage.\n   */\n  repaint: function (uiObject) {\n    if (uiObject) {\n      this.render.render(uiObject);\n    } else {\n      this.render.render(this._stage);\n    }\n  },\n\n  /**\n   * 增加子节点\n   * @param uiObject {PIXI.DisplayObject} The object to add.\n   */\n  addChild: function (uiObject) {\n    this._stage.addChild(uiObject);\n  },\n\n  removeChild: function (uiObject) {\n    this._stage.removeChild(uiObject);\n  }\n\n};\n\nmodule.exports = Stage;\n\n},{}],2:[function(require,module,exports){\n/**\n * This is a base class which can be placed to {@link Tivy.Stage}\n * 这个是可以放置到舞台上的基类.\n *\n * @class\n * @memberof Tivy\n * @param options {json} - 构造参数, 必须有 stage 参数\n * @constructor\n * @extends PIXI.Container\n */\nfunction UIObject(options) {\n  PIXI.Container.call(this);\n  if (!options) {\n    options = {};\n  }\n\n  this.stage = options.stage;\n  if (!this.stage) {\n    throw new Error('A stage is required.');\n  }\n  this.owner    = options.owner;\n  this.position = options.position || {x: 0, y: 0};\n  this.size     = options.size;\n  if (this.size && this.size.width > 0 && this.size.height > 0) {\n    this.width  = this.size.width;\n    this.height = this.size.height;\n  }\n  if (this.owner) {\n    this.owner.addChild(this);\n  } else {\n    this.stage.addChild(this);\n  }\n}\n\nUIObject.prototype             = Object.create(PIXI.Container.prototype);\nUIObject.prototype.constructor = UIObject;\nmodule.exports                 = UIObject;\n\n/**\n * 将这个置于顶部\n */\nUIObject.prototype.bringToFront = function () {\n  if (this.parent) {\n    var parent = this.parent;\n    parent.removeChild(this);\n    parent.addChild(this);\n  }\n};\n\n/**\n * 将这个置于底部\n */\nUIObject.prototype.sendToBack = function () {\n  if (this.parent) {\n    var parent = this.parent;\n    parent.removeChild(this);\n    parent.addChildAt(this, 0);\n  }\n};\n},{}],3:[function(require,module,exports){\nvar UIObject = require('./UIObject');\n\n/**\n * 描述了一个控件组, 并绑定了事件\n *\n * @class\n * @param options {json} 配置节点\n * @constructor\n * @memberof Tivy\n * @extends {Tivy.UIObject}\n */\nfunction UIObjectGroup(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 200, height: 200};\n  UIObject.call(this, options);\n\n\n  /**\n   * 这是控件的装载容器, 新建子控件的时候,需要指定 owner 为 这个 container. 创建这个控件的目的也是为了滑动整个内容\n   * @readonly\n   */\n  this.container = new PIXI.Container();\n  this.addChild(this.container);\n\n  /**\n   * 具有事件响应的控件们\n   * @member {Array}\n   * @readonly\n   */\n  this.controls = [];\n\n  /**\n   * 当前选中的 index\n   * @member {number}\n   * @readonly\n   */\n  this.currentIndex = -1;\n\n  /**\n   * 当前选中的控件\n   * @member {Object}\n   * @readonly\n   */\n  this.currentControl = null;\n\n  /**\n   * 当某个 tile 被执行的时候发生. 例如, 鼠标在tile上点击, touch点击, enter 键按下去\n   * @example\n   *\n   metro.on('execute', function (target, index) {\n      console.log('execute', target.text, index);\n    });\n   *\n   *\n   * @event execute\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n  /**\n   * 当某个 tile 被聚焦的时候发生. 例如, 鼠标划过 tile, touch 按住, 键盘聚焦等\n   *\n   * @example\n   metro.on('focus', function (target, index) {\n      console.log('focus', target.text, index);\n    });\n   *\n   *\n   * @event focus\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n  /**\n   * 当某个 tile 失去焦点的时候发生. 例如, 鼠标划过 tile, touch 松开, 键盘移除聚焦等\n   *\n   * @event leave\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n  /**\n   * 当某个组内的tile改变的时候发生\n   * @example\n   *\n   * metro.on('change', function (target, index, oldTarget, oldIndex) {\n   *   console.log('change', target.text, index);\n   * });\n   *\n   *\n   * @event change\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n}\n\nUIObjectGroup.prototype             = Object.create(UIObject.prototype);\nUIObjectGroup.prototype.constructor = UIObjectGroup;\nmodule.exports                      = UIObjectGroup;\n\n\n//UIObjectGroup.prototype._init = function () {\n//  var _this = this;\n//};\n\n/**\n * 给控件附加事件\n * @param uiObject {Object} 子元素控件, 在初始化元素之后附加事件\n * @example\n *\n var tile = new Tile({\n      stage             : _this.stage,\n      owner             : someGoupContainer,\n      size              : {width: ele.width, height: ele.height},\n      position          : {x: ele.x, y: ele.y},\n      placeHolderTexture: _this.layout.placeHolderTexture,\n      radius            : 10,\n      data              : somedata\n    });\n someGoupContainer.attachEvent(tile);\n *\n */\nUIObjectGroup.prototype.attachEvent = function (uiObject) {\n\n  this.controls.push(uiObject);\n  var i = this.controls.indexOf(uiObject);\n\n  var _this = this;\n  uiObject.on('mouseover', function () {\n    var oldIndex         = _this.currentIndex;\n    var oldCtr           = _this.currentControl;\n    _this.currentIndex   = i;\n    _this.currentControl = this;\n    _this.emit('focus', this, i);\n    if (oldIndex !== i) {\n      _this.emit('change', this, i, oldCtr, oldIndex);\n    }\n  });\n  uiObject.on('mouseout', function () {\n    _this.emit('leave', this, i);\n  });\n  uiObject.on('keydown', function () {\n    console.log('keydown');\n  });\n\n  uiObject.on('touchstart', function () {\n    var oldIndex         = _this.currentIndex;\n    var oldCtr           = _this.currentControl;\n    _this.currentIndex   = i;\n    _this.currentControl = this;\n    _this.emit('focus', this, i);\n    if (oldIndex !== i) {\n      _this.emit('change', this, i, oldCtr, oldIndex);\n    }\n  });\n  uiObject.on('touchend', function (data) {\n    if (_this.currentControl == data.target) {\n      _this.emit('execute', this, i);\n    }\n    _this.emit('leave', _this.currentControl, _this.currentIndex);\n  });\n  uiObject.on('click', function (data) {\n    _this.emit('execute', this, i);\n  });\n\n};\n\n/**\n * 当控件组重新被聚焦的时候, 触发 change 事件\n */\nUIObjectGroup.prototype.activate = function () {\n  if (this.isActive) {\n    return;\n  }\n  UIObject.prototype.activate.call(this);\n\n  if (this.currentIndex < 0) {\n    this.currentIndex   = 0;\n    this.currentControl = this.controls[0];\n  }\n  this.emit('change', this.currentControl, this.currentIndex, null, -1);\n\n};\n},{\"./UIObject\":2}],4:[function(require,module,exports){\nvar UIObject = require('../UIObject');\n\n/**\n * 这是一个按钮, 默认开启了事件支持.\n *\n * @class\n * @param options  {json} 配置节点\n * @example\n * {\n *  stage: stage01, //Instance of Stage\n *  size: {width: 300, height: 400},\n *  position: {x: 0, y: 0},\n *  textureDefault: textureDefault, //required.\n *  textureDown: textureDown,\n * }\n *\n * @constructor\n * @memberof Tivy\n * @extends Tivy.UIObject\n */\nfunction Button(options) {\n  if (!options) {\n    options = {};\n  }\n  UIObject.call(this, options);\n  this.textureDefault = options.textureDefault;\n  if (!this.textureDefault) {\n    throw new Error('textureDefault is required.');\n  }\n  this.textureDown = options.textureDown;\n\n  this.btnSprite   = null;\n  this.interactive = true;\n  this._paint(this.textureDefault);\n\n  var _this = this;\n  if (this.textureDown) {\n    var onPressDown = function () {\n      _this._paint(_this.textureDown);\n    };\n    var onPressUp   = function () {\n      _this._paint(_this.textureDefault);\n    };\n    this.on('mousedown', onPressDown);\n    this.on('mouseup', onPressUp);\n    this.on('touchstart', onPressDown);\n    this.on('touchend', onPressUp);\n  }\n}\n\nButton.prototype             = Object.create(UIObject.prototype);\nButton.prototype.constructor = Button;\nmodule.exports               = Button;\n\nButton.prototype._paint = function (_texture) {\n  if (this.btnSprite) {\n    this.btnSprite.texture = _texture;\n  } else {\n    this.btnSprite = new PIXI.Sprite(_texture);\n    this.addChild(this.btnSprite);\n\n  }\n  var _stage = this.stage;\n  _texture.baseTexture.on('loaded', function () {\n    _stage.repaint();\n  });\n  _stage.repaint();\n};\n\n\n},{\"../UIObject\":2}],5:[function(require,module,exports){\nvar UIObject = require('../UIObject');\n\n/**\n * 这是一个图片外框, 你可以指定一个带有阴影的正方形图片.\n * ```\n var frame = new Tivy.ImageFrame({\n      stage: stage,\n      imageUrl: './assets/img/frame.png',\n      position: {x: 100, y: 100},\n      size: {\n        width: 50, height: 50,\n      },\n      borderLength: 61,\n      radius: 15,\n      imageLength: 130\n    });\n\n * ```\n * @class\n * @memberof Tivy\n * @constructor\n * @extends Tivy.UIObject\n * @param options  {json} 配置节点\n */\nfunction ImageFrame(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 200, height: 200};\n  UIObject.call(this, options);\n\n  this.imageUrl = options.imageUrl;\n  if (!this.imageUrl) {\n    throw new Error('Frame imageUrl is required.');\n  }\n\n  this.radius       = options.radius;\n  this.borderLength = options.borderLength;\n  this.imageLength  = options.imageLength;\n\n  this._init();\n}\n\n\nImageFrame.prototype             = Object.create(UIObject.prototype);\nImageFrame.prototype.constructor = ImageFrame;\nmodule.exports                   = ImageFrame;\n\nImageFrame.prototype._init = function () {\n  var ttFrame = PIXI.Texture.fromImage(this.imageUrl);\n\n  var cltTT = new PIXI.Texture(ttFrame, {\n    x: 0, y: 0, width: this.borderLength, height: this.borderLength,\n  });\n  var ctTT  = new PIXI.Texture(ttFrame, {\n    x: this.borderLength, y: 0, width: 1, height: this.borderLength,\n  });\n\n  var crtTT = new PIXI.Texture(ttFrame, {\n    x     : this.imageLength - this.borderLength,\n    y     : 0,\n    width : this.borderLength,\n    height: this.borderLength,\n  });\n  var crTT  = new PIXI.Texture(ttFrame, {\n    x     : this.imageLength - this.borderLength,\n    y     : this.borderLength,\n    width : this.borderLength,\n    height: 1,\n  });\n  var crbTT = new PIXI.Texture(ttFrame, {\n    x     : this.imageLength - this.borderLength,\n    y     : this.imageLength - this.borderLength,\n    width : this.borderLength,\n    height: this.borderLength,\n  });\n  var cbTT  = new PIXI.Texture(ttFrame, {\n    x     : this.borderLength,\n    y     : this.imageLength - this.borderLength,\n    width : 1,\n    height: this.borderLength,\n  });\n  var clbTT = new PIXI.Texture(ttFrame, {\n    x     : 0,\n    y     : this.imageLength - this.borderLength,\n    width : this.borderLength,\n    height: this.borderLength,\n  });\n  var clTT  = new PIXI.Texture(ttFrame, {\n    x: 0, y: this.borderLength, width: this.borderLength, height: 1,\n  });\n  var clt   = this._clt = new PIXI.Sprite(cltTT);\n  var ct = this._ct = new PIXI.Sprite(ctTT);\n  var crt = this._crt = new PIXI.Sprite(crtTT);\n  var cr = this._cr = new PIXI.Sprite(crTT);\n  var crb = this._crb = new PIXI.Sprite(crbTT);\n  var cb = this._cb = new PIXI.Sprite(cbTT);\n  var clb = this._clb = new PIXI.Sprite(clbTT);\n  var cl = this._cl = new PIXI.Sprite(clTT);\n\n  this.addChild(clt);\n  this.addChild(ct);\n  this.addChild(crt);\n  this.addChild(cr);\n  this.addChild(crb);\n  this.addChild(cb);\n  this.addChild(clb);\n  this.addChild(cl);\n  this.setSize(this.size);\n};\n\n\n/**\n * 设置尺寸\n * @param newSize {json} 尺寸\n * ```json\n * {width:100, height:100}\n * ```\n */\nImageFrame.prototype.setSize = function (newSize) {\n  var nWidth  = newSize.width,\n      nHeight = newSize.height;\n  if (nWidth <= 2 * this.radius) {\n    nWidth = 2 * this.radius + 1;\n  }\n  if (nHeight <= 2 * this.radius) {\n    nHeight = 2 * this.radius + 1;\n  }\n\n  this.size.width  = nWidth;\n  this.size.height = nHeight;\n  // size.x = Math.round(size.x);\n  // size.y = Math.round(size.y);\n\n  this._clt.position = {\n    x: -this.borderLength + this.radius, y: -this.borderLength + this.radius,\n  };\n  this._crt.position = {\n    x: nWidth - this.radius, y: this.radius - this.borderLength,\n  };\n  this._crb.position = {\n    x: nWidth - this.radius, y: nHeight - this.radius,\n  };\n  this._clb.position = {\n    x: this.radius - this.borderLength, y: nHeight - this.radius,\n  };\n  this._ct.position  = {\n    x: this.radius, y: -this.borderLength + this.radius,\n  };\n  this._ct.width     = nWidth - this.radius * 2;\n  this._cr.position  = {\n    x: nWidth - this.radius, y: this.radius,\n  };\n  this._cr.height    = nHeight - this.radius * 2;\n  this._cb.position  = {\n    x: this.radius, y: nHeight - this.radius,\n  };\n\n  this._cb.width    = nWidth - this.radius * 2;\n  this._cl.position = {\n    x: this.radius - this.borderLength, y: this.radius,\n  };\n  this._cl.height   = nHeight - this.radius * 2;\n\n};\n\n/**\n * 设置位置\n *\n * @param newPosition {json} 位置\n * ```json\n * { x:10, y:10 }\n * ```\n */\nImageFrame.prototype.setPosition = function (newPosition) {\n  this.x = newPosition.x;\n  this.y = newPosition.y;\n};\n\n/**\n * 设置一个框框\n *\n * @param newBounds {json} 框框\n * ```json\n * { x:0, y:0, width:100, height:100 }\n * ```\n */\nImageFrame.prototype.setBounds = function (newBounds) {\n  this.x = newBounds.x;\n  this.y = newBounds.y;\n  this.setSize({width: newBounds.width, height: newBounds.height});\n\n};\n},{\"../UIObject\":2}],6:[function(require,module,exports){\nvar UIObject = require('../UIObject');\n/**\n * 广告招贴\n *\n *\n * ```javascript\n *\n var xTexture = PIXI.Texture.fromImage('./assets/img/place-holder.png');\n xTexture.baseTexture.on('loaded', function () {\n    var poster = new Tivy.Poster({\n      size: {width: 192, height: 338},\n      stage: stage,\n      showText: true,\n      text: \"中文\",\n      position: {x: 30, y: 30},\n      placeHolderTexture: xTexture,\n      textBgColor: 0x006600,\n      textColor:0xffffff,\n      //imageUrl:'./assets/img/test.png'\n    });\n\n    poster.setContent('./assets/img/test.png', '长发公主');\n\n    window.setTimeout(function () {\n      poster.destroy();\n    }, 10000);\n  });\n\n * ```\n * @class\n * @memberof Tivy\n * @param options {json} 配置节点\n * ```json\n * {\n *  stage: stage01, //Instance of Stage\n *  size: {width: 300, height: 400},\n *  position: {x: 0, y: 0},\n *  textColor: 0x7f7f7f,\n *  textBgColor: 0xffffff,\n *  textHeight: 50,\n *  font: '25px 迷你简准圆',\n *  text: '标题',\n *  imageUrl: someUrl,\n *  radius: 10,\n *  showText: false\n * }\n * ```\n * @constructor\n * @extends Tivy.UIObject\n */\nfunction Tile(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 300, height: 400};\n  UIObject.call(this, options);\n\n  this.placeHolderTexture = options.placeHolderTexture;\n  //if (!this.placeHolderTexture) {\n  //  throw new Error('placeHolderTexture is null');\n  //}\n\n  this.showText      = options.showText || false;\n  this.text          = options.text;\n  this.textColor     = options.textColor || 0x7f7f7f;\n  this.textBgColor   = options.textBgColor || 0xffffff;\n  this.textHeight    = options.textHeight || 50;\n  this.font          = options.font || '25px 迷你简准圆';\n  this.imageUrl      = options.imageUrl;\n  this.radius        = options.radius || 0;\n  this.posterTexture = null;\n  this.imageSprite   = null;\n  this.textLabel     = null;\n  this.posterSetted  = false;\n  this.interactive   = true;\n  this.data          = null;\n\n  this._init();\n}\n\nTile.prototype             = Object.create(UIObject.prototype);\nTile.prototype.constructor = Tile;\nmodule.exports             = Tile;\n\n/**\n * 初始化\n *\n * @private\n */\nTile.prototype._init = function () {\n  if (this.radius) {\n    var mask = new PIXI.Graphics();\n    mask.lineStyle(0);\n    mask.beginFill(0xffffff);\n    mask.drawRoundedRect(0, 0, this.size.width, this.size.height, this.radius);\n    mask.endFill();\n    this.addChild(mask);\n    this.mask = mask;\n  }\n\n  //背景\n  var g = new PIXI.Graphics();\n  g.lineStyle(0);\n  g.beginFill(this.textBgColor, .5);\n  if (this.showText && this.text) {\n    g.drawRect(0, 0, this.size.width, this.size.height - this.textHeight);\n\n    //文字背景\n    g.beginFill(this.textBgColor, .7);\n    g.drawRect(0, this.size.height - 50, this.size.width, this.textHeight);\n\n    this.textLabel = new PIXI.Text(this.text, {\n      font: this.font,\n      fill: this.textColor\n    });\n\n    this.textLabel.y = this.size.height - this.textHeight + (this.textHeight - this.textLabel.height) / 2;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n\n    g.addChild(this.textLabel);\n  }\n  else {\n    g.drawRect(0, 0, this.size.width, this.size.height);\n  }\n  g.endFill();\n  this.addChild(g);\n\n  this.imageSprite        = new PIXI.Sprite(this.placeHolderTexture);\n  this.imageSprite.width  = this.size.width;\n  this.imageSprite.height = this.showText ? this.size.height - this.textHeight : this.size.height;\n  //this.imageSprite.setInteractive(true);\n\n  if (this.imageUrl) {\n    this.setContent(this.imageUrl);\n  }\n\n  this.addChild(this.imageSprite);\n\n  this.stage.repaint();\n\n};\n\n/**\n * 设置广告招贴的图片和文字\n *\n * @param imgUrl {string} 海报的图片路径\n * @param text {string} 海报的标题\n * @param data {Object} 附加的数据\n */\nTile.prototype.setContent = function (imgUrl, text, data) {\n  if (imgUrl) {\n    imgUrl                   = imgUrl + '?t=' + (new Date()) * 1;\n    this.posterTexture       = PIXI.Texture.fromImage(imgUrl);\n    this.imageSprite.texture = this.posterTexture;\n    var _stage               = this.stage;\n    this.posterTexture.baseTexture.on('loaded', function () {\n      _stage.repaint();\n    });\n  }\n\n  if (this.showText && text) {\n    this.textLabel.text = text;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n  }\n  this.text         = text;\n  this.data         = data;\n  this.posterSetted = true;\n};\n\n\n/**\n * 销毁海报\n * Destroys the poster\n * @param [reserveTexture=false] {boolean} 是否保留贴图, 默认不保存\n */\nTile.prototype.destroy = function (reserveTexture) {\n  this.removeChildren();\n  this.stage.removeChild(this);\n  UIObject.prototype.destroy.call(this, true);\n\n  //this.imageSprite.texture = this.placeHolderTexture;\n  if (!reserveTexture) {\n    if (this.posterTexture && this.posterSetted) {\n      this.posterTexture.destroy(true);\n    }\n  }\n  this.stage.repaint();\n};\n\n\n},{\"../UIObject\":2}],7:[function(require,module,exports){\nvar UIObjectGroup = require('../UIObjectGroup');\nvar Tile          = require('../basic/Tile');\n\n/**\n * Metro 是一组自定义位置 tile 的组合\n *\n * @example\n var xTexture = PIXI.Texture.fromImage('./assets/img/place-holder.png');\n\n var layout = {\n    placeHolderTexture: xTexture,\n    radius: 20,\n    tiles: [\n      {\n        x: 0, y: 0, width: 200, height: 200,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 0, y: 210, width: 200, height: 200,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 0, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 210, y: 0, width: 400, height: 620,\n        showText: false\n      },\n      {\n        x: 620, y: 0, width: 500, height: 305,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 620, y: 315, width: 500, height: 305,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 1130, y: 0, width: 410, height: 410,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1130, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1340, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1550, y: 0, width: 500, height: 305,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1550, y: 315, width: 500, height: 305,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 2060, y: 0, width: 410, height: 410,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 2060, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 2270, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      }\n    ]\n  };\n var data   = [\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正0'\n },\n {\n   imageUrl: './assets/img/200X200.jpg',\n   text: '小正1'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正2'\n },\n {\n   imageUrl: './assets/img/400X620-1.jpeg',\n   text: '大长3'\n },\n {\n   imageUrl: './assets/img/500X305-1.jpg',\n   text: '中横4'\n },\n {\n   imageUrl: './assets/img/500X305-2.jpg',\n   text: '中横5'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正6'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正7'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正8'\n },\n {\n   imageUrl: './assets/img/500X305-1.jpg',\n   text: '中横9'\n },\n {\n   imageUrl: './assets/img/500X305-2.jpg',\n   text: '中横10'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正11'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正12'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正13'\n },\n\n ];\n\n\n var stage = new Tivy.Stage({\n    background: '#000',\n    id: 'stage01',\n    //size: {width: $(document.body).width(), height: $(document.body).height()}\n    size: {width: 1920, height: 1080}\n  });\n\n xTexture.baseTexture.on('loaded', function () {\n    var metro = new Tivy.Metro({\n      position: {x: 100, y: 200},\n      stage: stage,\n      layout: layout\n    });\n\n    metro.bindData(data);\n\n\n    metro.onTileOver = function (target, index) {\n      var oriH     = target.height,\n          oriW     = target.width;\n      target.scale = {x: 1.2, y: 1.2};\n      target.x     = target.x + (oriW - target.width) / 2;\n      target.y     = target.y + (oriH - target.height) / 2;\n      target.bringToFront();\n      stage.repaint();\n    };\n\n    metro.onTileOut = function (target, index) {\n      var oriH     = target.height,\n          oriW     = target.width;\n      target.scale = {x: 1, y: 1};\n      target.x     = target.x + (oriW - target.width) / 2;\n      target.y     = target.y + (oriH - target.height) / 2;\n      target.sendToBack();\n      stage.repaint();\n    };\n\n    metro.onTileExecute = function (target, index) {\n      console.log('execute', target.text);\n    }\n\n  });\n\n *\n *\n *\n * @class\n * @param options {json} Metro config\n * @constructor\n * @memberof Tivy\n * @extends {Tivy.UIObjectGroup}\n */\nfunction Metro(options) {\n  if (!options) {\n    options = {};\n  }\n  UIObjectGroup.call(this, options);\n\n  this.layout = options.layout;\n  if (!this.layout) {\n    throw new Error('layout is null');\n  }\n  this._init();\n\n}\n\n\nMetro.prototype             = Object.create(UIObjectGroup.prototype);\nMetro.prototype.constructor = Metro;\nmodule.exports              = Metro;\n\n\n/**\n * 初始化\n *\n * @private\n */\nMetro.prototype._init = function () {\n  //Draw layout\n  var _this = this;\n  this.layout.tiles.forEach(function (ele, i) {\n    var tile = new Tile({\n      stage             : _this.stage,\n      owner             : _this.container,\n      size              : {width: ele.width, height: ele.height},\n      position          : {x: ele.x, y: ele.y},\n      placeHolderTexture: _this.layout.placeHolderTexture,\n      radius            : ele.radius == null ? _this.layout.radius : ele.radius,\n      data              : ele.data\n    });\n    _this.attachEvent(tile);\n  });\n\n};\n\n/**\n * 绑定数据\n *\n * @param newData {json} 绑定的数据, 格式如下:\n * @example\n *  [{\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正0',\n   data: 'anything'\n },\n {\n   imageUrl: './assets/img/200X200.jpg',\n   text: '小正1',\n   data: 'anything'\n }]\n *\n */\nMetro.prototype.bindData = function (newData) {\n  var _this = this;\n  newData.forEach(function (ele, i) {\n    _this.controls[i].setContent(ele.imageUrl, ele.text, ele.data);\n  });\n};\n},{\"../UIObjectGroup\":3,\"../basic/Tile\":6}],8:[function(require,module,exports){\nvar UIObject = require('../UIObject');\n/**\n * 广告招贴\n *\n *\n * ```javascript\n *\n var xTexture = PIXI.Texture.fromImage('./assets/img/place-holder.png');\n xTexture.baseTexture.on('loaded', function () {\n    var poster = new Tivy.Poster({\n      size: {width: 192, height: 338},\n      stage: stage,\n      showText: true,\n      text: \"中文\",\n      position: {x: 30, y: 30},\n      placeHolderTexture: xTexture,\n      textBgColor: 0x006600,\n      textColor:0xffffff,\n      //imageUrl:'./assets/img/test.png'\n    });\n\n    poster.setContent('./assets/img/test.png', '长发公主');\n\n    window.setTimeout(function () {\n      poster.destroy();\n    }, 10000);\n  });\n\n * ```\n * @class\n * @memberof Tivy\n * @constructor\n * @extends Tivy.UIObject\n * @param options {json} 配置节点\n * ```json\n * {\n *  stage: stage01, //Instance of Stage\n *  size: {width: 300, height: 400},\n *  position: {x: 0, y: 0},\n *  textColor: 0x7f7f7f,\n *  textBgColor: 0xffffff,\n *  textHeight: 50,\n *  font: '25px 迷你简准圆',\n *  text: '标题',\n *  imageUrl: someUrl,\n *  radius: 10,\n *  showText: false\n * }\n * ```\n */\nfunction Poster(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 300, height: 400};\n  UIObject.call(this, options);\n\n  this.placeHolderTexture = options.placeHolderTexture;\n  if (!this.placeHolderTexture) {\n    throw new Error('placeHolderTexture is null');\n  }\n\n  this.showText      = options.showText || false;\n  this.text          = options.text;\n  this.textColor     = options.textColor || 0x7f7f7f;\n  this.textBgColor   = options.textBgColor || 0xffffff;\n  this.textHeight    = options.textHeight || 50;\n  this.font          = options.font || '25px 迷你简准圆';\n  this.imageUrl      = options.imageUrl;\n  this.radius        = options.radius || 0;\n  this.posterTexture = null;\n  this.imageSprite   = null;\n  this.textLabel     = null;\n  this.posterSetted  = false;\n\n  this._paint();\n}\n\nPoster.prototype             = Object.create(UIObject.prototype);\nPoster.prototype.constructor = Poster;\nmodule.exports               = Poster;\n\n/**\n * 画上去\n *\n * @private\n */\nPoster.prototype._paint = function () {\n  if (this.radius) {\n    var mask = new PIXI.Graphics();\n    mask.lineStyle(0);\n    mask.beginFill(0xffffff);\n    mask.drawRoundedRect(0, 0, this.size.width, this.size.height, this.radius);\n    mask.endFill();\n    this.addChild(mask);\n    this.mask = mask;\n  }\n\n  //背景\n  var g = new PIXI.Graphics();\n  g.lineStyle(0);\n  g.beginFill(this.textBgColor, .5);\n  if (this.showText && this.text) {\n    g.drawRect(0, 0, this.size.width, this.size.height - this.textHeight);\n\n    //文字背景\n    g.beginFill(this.textBgColor, .7);\n    g.drawRect(0, this.size.height - 50, this.size.width, this.textHeight);\n\n    this.textLabel = new PIXI.Text(this.text, {\n      font: this.font,\n      fill: this.textColor\n    });\n\n    this.textLabel.y = this.size.height - this.textHeight + (this.textHeight - this.textLabel.height) / 2;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n\n    g.addChild(this.textLabel);\n  }\n  else {\n    g.drawRect(0, 0, this.size.width, this.size.height);\n  }\n  g.endFill();\n  this.addChild(g);\n\n  this.imageSprite        = new PIXI.Sprite(this.placeHolderTexture);\n  this.imageSprite.width  = this.size.width;\n  this.imageSprite.height = this.showText ? this.size.height - this.textHeight : this.size.height;\n  //this.imageSprite.setInteractive(true);\n\n  if (this.imageUrl) {\n    this.setContent(this.imageUrl);\n  }\n\n  this.addChild(this.imageSprite);\n\n  this.stage.repaint();\n\n};\n\n/**\n * 设置广告招贴的图片和文字\n *\n * @param imgUrl {string} 海报的图片路径\n * @param text {string} 海报的标题\n */\nPoster.prototype.setContent = function (imgUrl, text) {\n  if (imgUrl) {\n    imgUrl                   = imgUrl + '?t=' + (new Date()) * 1;\n    this.posterTexture       = PIXI.Texture.fromImage(imgUrl);\n    this.imageSprite.texture = this.posterTexture;\n    var _stage               = this.stage;\n    this.posterTexture.baseTexture.on('loaded', function () {\n      _stage.repaint();\n    });\n  }\n\n  if (this.showText && text) {\n    this.textLabel.text = text;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n  }\n  this.text         = text;\n  this.posterSetted = true;\n};\n\n\n/**\n * 销毁海报\n * Destroys the poster\n * @param reserveTexture {boolean} 是否保留贴图, 默认不保存\n */\nPoster.prototype.destroy = function (reserveTexture) {\n  this.removeChildren();\n  this.stage.removeChild(this);\n  UIObject.prototype.destroy.call(this, true);\n\n  //this.imageSprite.texture = this.placeHolderTexture;\n  if (!reserveTexture) {\n    if (this.posterTexture && this.posterSetted) {\n      this.posterTexture.destroy(true);\n    }\n  }\n  this.stage.repaint();\n};\n\n\n},{\"../UIObject\":2}],9:[function(require,module,exports){\n/**\n * 键盘事件管理器, 此类已经混合进 UIObject, 可以直接在 UIObject 示例上进行调用\n * @mixin\n * @class\n * @constructor\n * @memberof Tivy\n */\nfunction KeyboardManager() {\n  /**\n   * 目标 object 是否可以响应键盘事件\n   *\n   * @member {boolean}\n   */\n  this.isActive = false;\n\n\n  /**\n   * 按键区域被激活后\n   * @example\n   * metro.on('activated', function () {});\n   * @event activated\n   * @memberof Tivy.KeyboardManager#\n   */\n\n  /**\n   * 激活区域被取消\n   * @event deactivated\n   * @memberof Tivy.KeyboardManager#\n   */\n  /**\n   * 键盘被按\n   * @event keypress\n   * @memberof Tivy.KeyboardManager#\n   */\n\n  /**\n   * 按键按下\n   * @example\n   * metro.on('keydown', function () {});\n   * @event keydown\n   * @memberof Tivy.KeyboardManager#\n   */\n\n  /**\n   * 按键抬起\n   * @event keyup\n   * @memberof Tivy.KeyboardManager#\n   */\n\n\n}\n\nKeyboardManager.prototype.constructor = KeyboardManager;\nmodule.exports                        = KeyboardManager;\n\n/**\n * 激活按键区域, 并绑定事件\n */\nKeyboardManager.prototype.activate = function () {\n  if (this.isActive) {\n    return;\n  }\n  this.isActive = true;\n\n\n  var _this = this;\n  window.document.addEventListener('keydown', function (keyboardEvent) {\n    _this.emit('keydown', keyboardEvent);\n  }, true);\n  window.document.addEventListener('keyup', function (keyboardEvent) {\n    _this.emit('keyup', keyboardEvent);\n  }, true);\n  window.document.addEventListener('keypress', function (keyboardEvent) {\n    _this.emit('keypress', keyboardEvent);\n  }, true);\n\n  this.emit('activated');\n};\n\n/**\n * 取消激活\n */\nKeyboardManager.prototype.deactivate = function () {\n  if (!this.isActive) {\n    return;\n  }\n\n\n  this.isActive = false;\n  window.document.removeEventListener('keydown');\n  window.document.removeEventListener('keyup');\n  window.document.removeEventListener('keypress');\n\n  this.emit('deactivated');\n\n};\n\n},{}],10:[function(require,module,exports){\n(function (global){\nvar tivy = module.exports = {\n  UIObject       : require('./UIObject'),\n  UIObjectGroup  : require('./UIObjectGroup'),\n  Stage          : require('./Stage'),\n  Button         : require('./basic/Button'),\n  Tile           : require('./basic/Tile'),\n  ImageFrame     : require('./basic/ImageFrame'),\n  Poster         : require('./components/Poster'),\n  Metro          : require('./components/Metro'),\n  KeyboardManager: require('./events/KeyboardManager'),\n};\n\n//mixin tow class\nObject.assign(\n  tivy.UIObject.prototype,\n  tivy.KeyboardManager.prototype\n);\n\n\nglobal.Tivy = tivy;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./Stage\":1,\"./UIObject\":2,\"./UIObjectGroup\":3,\"./basic/Button\":4,\"./basic/ImageFrame\":5,\"./basic/Tile\":6,\"./components/Metro\":7,\"./components/Poster\":8,\"./events/KeyboardManager\":9}]},{},[10])(10)\n});\n\n","/**\n * This is a base class which can be placed to {@link Tivy.Stage}\n * 这个是可以放置到舞台上的基类.\n *\n * @class\n * @memberof Tivy\n * @param options {json} - 构造参数, 必须有 stage 参数\n * @constructor\n * @extends PIXI.Container\n */\nfunction UIObject(options) {\n  PIXI.Container.call(this);\n  if (!options) {\n    options = {};\n  }\n\n  this.stage = options.stage;\n  if (!this.stage) {\n    throw new Error('A stage is required.');\n  }\n  this.owner    = options.owner;\n  this.position = options.position || {x: 0, y: 0};\n  this.size     = options.size;\n  if (this.size && this.size.width > 0 && this.size.height > 0) {\n    this.width  = this.size.width;\n    this.height = this.size.height;\n  }\n  if (this.owner) {\n    this.owner.addChild(this);\n  } else {\n    this.stage.addChild(this);\n  }\n}\n\nUIObject.prototype             = Object.create(PIXI.Container.prototype);\nUIObject.prototype.constructor = UIObject;\nmodule.exports                 = UIObject;\n\n/**\n * 将这个置于顶部\n */\nUIObject.prototype.bringToFront = function () {\n  if (this.parent) {\n    var parent = this.parent;\n    parent.removeChild(this);\n    parent.addChild(this);\n  }\n};\n\n/**\n * 将这个置于底部\n */\nUIObject.prototype.sendToBack = function () {\n  if (this.parent) {\n    var parent = this.parent;\n    parent.removeChild(this);\n    parent.addChildAt(this, 0);\n  }\n};","var UIObject = require('./UIObject');\n\n/**\n * 描述了一个控件组, 并绑定了事件\n *\n * @class\n * @param options {json} 配置节点\n * @constructor\n * @memberof Tivy\n * @extends {Tivy.UIObject}\n */\nfunction UIObjectGroup(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 200, height: 200};\n  UIObject.call(this, options);\n\n\n  /**\n   * 这是控件的装载容器, 新建子控件的时候,需要指定 owner 为 这个 container. 创建这个控件的目的也是为了滑动整个内容\n   * @readonly\n   */\n  this.container = new PIXI.Container();\n  this.addChild(this.container);\n\n  /**\n   * 具有事件响应的控件们\n   * @member {Array}\n   * @readonly\n   */\n  this.controls = [];\n\n  /**\n   * 当前选中的 index\n   * @member {number}\n   * @readonly\n   */\n  this.currentIndex = -1;\n\n  /**\n   * 当前选中的控件\n   * @member {Object}\n   * @readonly\n   */\n  this.currentControl = null;\n\n  /**\n   * 当某个 tile 被执行的时候发生. 例如, 鼠标在tile上点击, touch点击, enter 键按下去\n   * @example\n   *\n   metro.on('execute', function (target, index) {\n      console.log('execute', target.text, index);\n    });\n   *\n   *\n   * @event execute\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n  /**\n   * 当某个 tile 被聚焦的时候发生. 例如, 鼠标划过 tile, touch 按住, 键盘聚焦等\n   *\n   * @example\n   metro.on('focus', function (target, index) {\n      console.log('focus', target.text, index);\n    });\n   *\n   *\n   * @event focus\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n  /**\n   * 当某个 tile 失去焦点的时候发生. 例如, 鼠标划过 tile, touch 松开, 键盘移除聚焦等\n   *\n   * @event leave\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n  /**\n   * 当某个组内的tile改变的时候发生\n   * @example\n   *\n   * metro.on('change', function (target, index, oldTarget, oldIndex) {\n   *   console.log('change', target.text, index);\n   * });\n   *\n   *\n   * @event change\n   * @memberof Tivy.UIObjectGroup#\n   * @protected\n   */\n\n}\n\nUIObjectGroup.prototype             = Object.create(UIObject.prototype);\nUIObjectGroup.prototype.constructor = UIObjectGroup;\nmodule.exports                      = UIObjectGroup;\n\n\n//UIObjectGroup.prototype._init = function () {\n//  var _this = this;\n//};\n\n/**\n * 给控件附加事件\n * @param uiObject {Object} 子元素控件, 在初始化元素之后附加事件\n * @example\n *\n var tile = new Tile({\n      stage             : _this.stage,\n      owner             : someGoupContainer,\n      size              : {width: ele.width, height: ele.height},\n      position          : {x: ele.x, y: ele.y},\n      placeHolderTexture: _this.layout.placeHolderTexture,\n      radius            : 10,\n      data              : somedata\n    });\n someGoupContainer.attachEvent(tile);\n *\n */\nUIObjectGroup.prototype.attachEvent = function (uiObject) {\n\n  this.controls.push(uiObject);\n  var i = this.controls.indexOf(uiObject);\n\n  var _this = this;\n  uiObject.on('mouseover', function () {\n    var oldIndex         = _this.currentIndex;\n    var oldCtr           = _this.currentControl;\n    _this.currentIndex   = i;\n    _this.currentControl = this;\n    _this.emit('focus', this, i);\n    if (oldIndex !== i) {\n      _this.emit('change', this, i, oldCtr, oldIndex);\n    }\n  });\n  uiObject.on('mouseout', function () {\n    _this.emit('leave', this, i);\n  });\n  uiObject.on('keydown', function () {\n    console.log('keydown');\n  });\n\n  uiObject.on('touchstart', function () {\n    var oldIndex         = _this.currentIndex;\n    var oldCtr           = _this.currentControl;\n    _this.currentIndex   = i;\n    _this.currentControl = this;\n    _this.emit('focus', this, i);\n    if (oldIndex !== i) {\n      _this.emit('change', this, i, oldCtr, oldIndex);\n    }\n  });\n  uiObject.on('touchend', function (data) {\n    if (_this.currentControl == data.target) {\n      _this.emit('execute', this, i);\n    }\n    _this.emit('leave', _this.currentControl, _this.currentIndex);\n  });\n  uiObject.on('click', function (data) {\n    _this.emit('execute', this, i);\n  });\n\n};\n\n/**\n * 当控件组重新被聚焦的时候, 触发 change 事件\n */\nUIObjectGroup.prototype.activate = function () {\n  if (this.isActive) {\n    return;\n  }\n  UIObject.prototype.activate.call(this);\n\n  if (this.currentIndex < 0) {\n    this.currentIndex   = 0;\n    this.currentControl = this.controls[0];\n  }\n  this.emit('change', this.currentControl, this.currentIndex, null, -1);\n\n};","var UIObject = require('../UIObject');\n\n/**\n * 这是一个按钮, 默认开启了事件支持.\n *\n * @class\n * @param options  {json} 配置节点\n * @example\n * {\n *  stage: stage01, //Instance of Stage\n *  size: {width: 300, height: 400},\n *  position: {x: 0, y: 0},\n *  textureDefault: textureDefault, //required.\n *  textureDown: textureDown,\n * }\n *\n * @constructor\n * @memberof Tivy\n * @extends Tivy.UIObject\n */\nfunction Button(options) {\n  if (!options) {\n    options = {};\n  }\n  UIObject.call(this, options);\n  this.textureDefault = options.textureDefault;\n  if (!this.textureDefault) {\n    throw new Error('textureDefault is required.');\n  }\n  this.textureDown = options.textureDown;\n\n  this.btnSprite   = null;\n  this.interactive = true;\n  this._paint(this.textureDefault);\n\n  var _this = this;\n  if (this.textureDown) {\n    var onPressDown = function () {\n      _this._paint(_this.textureDown);\n    };\n    var onPressUp   = function () {\n      _this._paint(_this.textureDefault);\n    };\n    this.on('mousedown', onPressDown);\n    this.on('mouseup', onPressUp);\n    this.on('touchstart', onPressDown);\n    this.on('touchend', onPressUp);\n  }\n}\n\nButton.prototype             = Object.create(UIObject.prototype);\nButton.prototype.constructor = Button;\nmodule.exports               = Button;\n\nButton.prototype._paint = function (_texture) {\n  if (this.btnSprite) {\n    this.btnSprite.texture = _texture;\n  } else {\n    this.btnSprite = new PIXI.Sprite(_texture);\n    this.addChild(this.btnSprite);\n\n  }\n  var _stage = this.stage;\n  _texture.baseTexture.on('loaded', function () {\n    _stage.repaint();\n  });\n  _stage.repaint();\n};\n\n","var UIObject = require('../UIObject');\n\n/**\n * 这是一个图片外框, 你可以指定一个带有阴影的正方形图片.\n * ```\n var frame = new Tivy.ImageFrame({\n      stage: stage,\n      imageUrl: './assets/img/frame.png',\n      position: {x: 100, y: 100},\n      size: {\n        width: 50, height: 50,\n      },\n      borderLength: 61,\n      radius: 15,\n      imageLength: 130\n    });\n\n * ```\n * @class\n * @memberof Tivy\n * @constructor\n * @extends Tivy.UIObject\n * @param options  {json} 配置节点\n */\nfunction ImageFrame(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 200, height: 200};\n  UIObject.call(this, options);\n\n  this.imageUrl = options.imageUrl;\n  if (!this.imageUrl) {\n    throw new Error('Frame imageUrl is required.');\n  }\n\n  this.radius       = options.radius;\n  this.borderLength = options.borderLength;\n  this.imageLength  = options.imageLength;\n\n  this._init();\n}\n\n\nImageFrame.prototype             = Object.create(UIObject.prototype);\nImageFrame.prototype.constructor = ImageFrame;\nmodule.exports                   = ImageFrame;\n\nImageFrame.prototype._init = function () {\n  var ttFrame = PIXI.Texture.fromImage(this.imageUrl);\n\n  var cltTT = new PIXI.Texture(ttFrame, {\n    x: 0, y: 0, width: this.borderLength, height: this.borderLength,\n  });\n  var ctTT  = new PIXI.Texture(ttFrame, {\n    x: this.borderLength, y: 0, width: 1, height: this.borderLength,\n  });\n\n  var crtTT = new PIXI.Texture(ttFrame, {\n    x     : this.imageLength - this.borderLength,\n    y     : 0,\n    width : this.borderLength,\n    height: this.borderLength,\n  });\n  var crTT  = new PIXI.Texture(ttFrame, {\n    x     : this.imageLength - this.borderLength,\n    y     : this.borderLength,\n    width : this.borderLength,\n    height: 1,\n  });\n  var crbTT = new PIXI.Texture(ttFrame, {\n    x     : this.imageLength - this.borderLength,\n    y     : this.imageLength - this.borderLength,\n    width : this.borderLength,\n    height: this.borderLength,\n  });\n  var cbTT  = new PIXI.Texture(ttFrame, {\n    x     : this.borderLength,\n    y     : this.imageLength - this.borderLength,\n    width : 1,\n    height: this.borderLength,\n  });\n  var clbTT = new PIXI.Texture(ttFrame, {\n    x     : 0,\n    y     : this.imageLength - this.borderLength,\n    width : this.borderLength,\n    height: this.borderLength,\n  });\n  var clTT  = new PIXI.Texture(ttFrame, {\n    x: 0, y: this.borderLength, width: this.borderLength, height: 1,\n  });\n  var clt   = this._clt = new PIXI.Sprite(cltTT);\n  var ct = this._ct = new PIXI.Sprite(ctTT);\n  var crt = this._crt = new PIXI.Sprite(crtTT);\n  var cr = this._cr = new PIXI.Sprite(crTT);\n  var crb = this._crb = new PIXI.Sprite(crbTT);\n  var cb = this._cb = new PIXI.Sprite(cbTT);\n  var clb = this._clb = new PIXI.Sprite(clbTT);\n  var cl = this._cl = new PIXI.Sprite(clTT);\n\n  this.addChild(clt);\n  this.addChild(ct);\n  this.addChild(crt);\n  this.addChild(cr);\n  this.addChild(crb);\n  this.addChild(cb);\n  this.addChild(clb);\n  this.addChild(cl);\n  this.setSize(this.size);\n};\n\n\n/**\n * 设置尺寸\n * @param newSize {json} 尺寸\n * ```json\n * {width:100, height:100}\n * ```\n */\nImageFrame.prototype.setSize = function (newSize) {\n  var nWidth  = newSize.width,\n      nHeight = newSize.height;\n  if (nWidth <= 2 * this.radius) {\n    nWidth = 2 * this.radius + 1;\n  }\n  if (nHeight <= 2 * this.radius) {\n    nHeight = 2 * this.radius + 1;\n  }\n\n  this.size.width  = nWidth;\n  this.size.height = nHeight;\n  // size.x = Math.round(size.x);\n  // size.y = Math.round(size.y);\n\n  this._clt.position = {\n    x: -this.borderLength + this.radius, y: -this.borderLength + this.radius,\n  };\n  this._crt.position = {\n    x: nWidth - this.radius, y: this.radius - this.borderLength,\n  };\n  this._crb.position = {\n    x: nWidth - this.radius, y: nHeight - this.radius,\n  };\n  this._clb.position = {\n    x: this.radius - this.borderLength, y: nHeight - this.radius,\n  };\n  this._ct.position  = {\n    x: this.radius, y: -this.borderLength + this.radius,\n  };\n  this._ct.width     = nWidth - this.radius * 2;\n  this._cr.position  = {\n    x: nWidth - this.radius, y: this.radius,\n  };\n  this._cr.height    = nHeight - this.radius * 2;\n  this._cb.position  = {\n    x: this.radius, y: nHeight - this.radius,\n  };\n\n  this._cb.width    = nWidth - this.radius * 2;\n  this._cl.position = {\n    x: this.radius - this.borderLength, y: this.radius,\n  };\n  this._cl.height   = nHeight - this.radius * 2;\n\n};\n\n/**\n * 设置位置\n *\n * @param newPosition {json} 位置\n * ```json\n * { x:10, y:10 }\n * ```\n */\nImageFrame.prototype.setPosition = function (newPosition) {\n  this.x = newPosition.x;\n  this.y = newPosition.y;\n};\n\n/**\n * 设置一个框框\n *\n * @param newBounds {json} 框框\n * ```json\n * { x:0, y:0, width:100, height:100 }\n * ```\n */\nImageFrame.prototype.setBounds = function (newBounds) {\n  this.x = newBounds.x;\n  this.y = newBounds.y;\n  this.setSize({width: newBounds.width, height: newBounds.height});\n\n};","var UIObject = require('../UIObject');\n/**\n * 广告招贴\n *\n *\n * ```javascript\n *\n var xTexture = PIXI.Texture.fromImage('./assets/img/place-holder.png');\n xTexture.baseTexture.on('loaded', function () {\n    var poster = new Tivy.Poster({\n      size: {width: 192, height: 338},\n      stage: stage,\n      showText: true,\n      text: \"中文\",\n      position: {x: 30, y: 30},\n      placeHolderTexture: xTexture,\n      textBgColor: 0x006600,\n      textColor:0xffffff,\n      //imageUrl:'./assets/img/test.png'\n    });\n\n    poster.setContent('./assets/img/test.png', '长发公主');\n\n    window.setTimeout(function () {\n      poster.destroy();\n    }, 10000);\n  });\n\n * ```\n * @class\n * @memberof Tivy\n * @param options {json} 配置节点\n * ```json\n * {\n *  stage: stage01, //Instance of Stage\n *  size: {width: 300, height: 400},\n *  position: {x: 0, y: 0},\n *  textColor: 0x7f7f7f,\n *  textBgColor: 0xffffff,\n *  textHeight: 50,\n *  font: '25px 迷你简准圆',\n *  text: '标题',\n *  imageUrl: someUrl,\n *  radius: 10,\n *  showText: false\n * }\n * ```\n * @constructor\n * @extends Tivy.UIObject\n */\nfunction Tile(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 300, height: 400};\n  UIObject.call(this, options);\n\n  this.placeHolderTexture = options.placeHolderTexture;\n  //if (!this.placeHolderTexture) {\n  //  throw new Error('placeHolderTexture is null');\n  //}\n\n  this.showText      = options.showText || false;\n  this.text          = options.text;\n  this.textColor     = options.textColor || 0x7f7f7f;\n  this.textBgColor   = options.textBgColor || 0xffffff;\n  this.textHeight    = options.textHeight || 50;\n  this.font          = options.font || '25px 迷你简准圆';\n  this.imageUrl      = options.imageUrl;\n  this.radius        = options.radius || 0;\n  this.posterTexture = null;\n  this.imageSprite   = null;\n  this.textLabel     = null;\n  this.posterSetted  = false;\n  this.interactive   = true;\n  this.data          = null;\n\n  this._init();\n}\n\nTile.prototype             = Object.create(UIObject.prototype);\nTile.prototype.constructor = Tile;\nmodule.exports             = Tile;\n\n/**\n * 初始化\n *\n * @private\n */\nTile.prototype._init = function () {\n  if (this.radius) {\n    var mask = new PIXI.Graphics();\n    mask.lineStyle(0);\n    mask.beginFill(0xffffff);\n    mask.drawRoundedRect(0, 0, this.size.width, this.size.height, this.radius);\n    mask.endFill();\n    this.addChild(mask);\n    this.mask = mask;\n  }\n\n  //背景\n  var g = new PIXI.Graphics();\n  g.lineStyle(0);\n  g.beginFill(this.textBgColor, .5);\n  if (this.showText && this.text) {\n    g.drawRect(0, 0, this.size.width, this.size.height - this.textHeight);\n\n    //文字背景\n    g.beginFill(this.textBgColor, .7);\n    g.drawRect(0, this.size.height - 50, this.size.width, this.textHeight);\n\n    this.textLabel = new PIXI.Text(this.text, {\n      font: this.font,\n      fill: this.textColor\n    });\n\n    this.textLabel.y = this.size.height - this.textHeight + (this.textHeight - this.textLabel.height) / 2;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n\n    g.addChild(this.textLabel);\n  }\n  else {\n    g.drawRect(0, 0, this.size.width, this.size.height);\n  }\n  g.endFill();\n  this.addChild(g);\n\n  this.imageSprite        = new PIXI.Sprite(this.placeHolderTexture);\n  this.imageSprite.width  = this.size.width;\n  this.imageSprite.height = this.showText ? this.size.height - this.textHeight : this.size.height;\n  //this.imageSprite.setInteractive(true);\n\n  if (this.imageUrl) {\n    this.setContent(this.imageUrl);\n  }\n\n  this.addChild(this.imageSprite);\n\n  this.stage.repaint();\n\n};\n\n/**\n * 设置广告招贴的图片和文字\n *\n * @param imgUrl {string} 海报的图片路径\n * @param text {string} 海报的标题\n * @param data {Object} 附加的数据\n */\nTile.prototype.setContent = function (imgUrl, text, data) {\n  if (imgUrl) {\n    imgUrl                   = imgUrl + '?t=' + (new Date()) * 1;\n    this.posterTexture       = PIXI.Texture.fromImage(imgUrl);\n    this.imageSprite.texture = this.posterTexture;\n    var _stage               = this.stage;\n    this.posterTexture.baseTexture.on('loaded', function () {\n      _stage.repaint();\n    });\n  }\n\n  if (this.showText && text) {\n    this.textLabel.text = text;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n  }\n  this.text         = text;\n  this.data         = data;\n  this.posterSetted = true;\n};\n\n\n/**\n * 销毁海报\n * Destroys the poster\n * @param [reserveTexture=false] {boolean} 是否保留贴图, 默认不保存\n */\nTile.prototype.destroy = function (reserveTexture) {\n  this.removeChildren();\n  this.stage.removeChild(this);\n  UIObject.prototype.destroy.call(this, true);\n\n  //this.imageSprite.texture = this.placeHolderTexture;\n  if (!reserveTexture) {\n    if (this.posterTexture && this.posterSetted) {\n      this.posterTexture.destroy(true);\n    }\n  }\n  this.stage.repaint();\n};\n\n","var UIObjectGroup = require('../UIObjectGroup');\nvar Tile          = require('../basic/Tile');\n\n/**\n * Metro 是一组自定义位置 tile 的组合\n *\n * @example\n var xTexture = PIXI.Texture.fromImage('./assets/img/place-holder.png');\n\n var layout = {\n    placeHolderTexture: xTexture,\n    radius: 20,\n    tiles: [\n      {\n        x: 0, y: 0, width: 200, height: 200,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 0, y: 210, width: 200, height: 200,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 0, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 210, y: 0, width: 400, height: 620,\n        showText: false\n      },\n      {\n        x: 620, y: 0, width: 500, height: 305,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 620, y: 315, width: 500, height: 305,\n        showText: false,\n        radius: 0\n      },\n      {\n        x: 1130, y: 0, width: 410, height: 410,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1130, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1340, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1550, y: 0, width: 500, height: 305,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 1550, y: 315, width: 500, height: 305,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 2060, y: 0, width: 410, height: 410,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 2060, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      },\n      {\n        x: 2270, y: 420, width: 200, height: 200,\n        showText: false,\n        radius: 10\n      }\n    ]\n  };\n var data   = [\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正0'\n },\n {\n   imageUrl: './assets/img/200X200.jpg',\n   text: '小正1'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正2'\n },\n {\n   imageUrl: './assets/img/400X620-1.jpeg',\n   text: '大长3'\n },\n {\n   imageUrl: './assets/img/500X305-1.jpg',\n   text: '中横4'\n },\n {\n   imageUrl: './assets/img/500X305-2.jpg',\n   text: '中横5'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正6'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正7'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正8'\n },\n {\n   imageUrl: './assets/img/500X305-1.jpg',\n   text: '中横9'\n },\n {\n   imageUrl: './assets/img/500X305-2.jpg',\n   text: '中横10'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正11'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正12'\n },\n {\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正13'\n },\n\n ];\n\n\n var stage = new Tivy.Stage({\n    background: '#000',\n    id: 'stage01',\n    //size: {width: $(document.body).width(), height: $(document.body).height()}\n    size: {width: 1920, height: 1080}\n  });\n\n xTexture.baseTexture.on('loaded', function () {\n    var metro = new Tivy.Metro({\n      position: {x: 100, y: 200},\n      stage: stage,\n      layout: layout\n    });\n\n    metro.bindData(data);\n\n\n    metro.onTileOver = function (target, index) {\n      var oriH     = target.height,\n          oriW     = target.width;\n      target.scale = {x: 1.2, y: 1.2};\n      target.x     = target.x + (oriW - target.width) / 2;\n      target.y     = target.y + (oriH - target.height) / 2;\n      target.bringToFront();\n      stage.repaint();\n    };\n\n    metro.onTileOut = function (target, index) {\n      var oriH     = target.height,\n          oriW     = target.width;\n      target.scale = {x: 1, y: 1};\n      target.x     = target.x + (oriW - target.width) / 2;\n      target.y     = target.y + (oriH - target.height) / 2;\n      target.sendToBack();\n      stage.repaint();\n    };\n\n    metro.onTileExecute = function (target, index) {\n      console.log('execute', target.text);\n    }\n\n  });\n\n *\n *\n *\n * @class\n * @param options {json} Metro config\n * @constructor\n * @memberof Tivy\n * @extends {Tivy.UIObjectGroup}\n */\nfunction Metro(options) {\n  if (!options) {\n    options = {};\n  }\n  UIObjectGroup.call(this, options);\n\n  this.layout = options.layout;\n  if (!this.layout) {\n    throw new Error('layout is null');\n  }\n  this._init();\n\n}\n\n\nMetro.prototype             = Object.create(UIObjectGroup.prototype);\nMetro.prototype.constructor = Metro;\nmodule.exports              = Metro;\n\n\n/**\n * 初始化\n *\n * @private\n */\nMetro.prototype._init = function () {\n  //Draw layout\n  var _this = this;\n  this.layout.tiles.forEach(function (ele, i) {\n    var tile = new Tile({\n      stage             : _this.stage,\n      owner             : _this.container,\n      size              : {width: ele.width, height: ele.height},\n      position          : {x: ele.x, y: ele.y},\n      placeHolderTexture: _this.layout.placeHolderTexture,\n      radius            : ele.radius == null ? _this.layout.radius : ele.radius,\n      data              : ele.data\n    });\n    _this.attachEvent(tile);\n  });\n\n};\n\n/**\n * 绑定数据\n *\n * @param newData {json} 绑定的数据, 格式如下:\n * @example\n *  [{\n   imageUrl: './assets/img/200X200-1.jpg',\n   text: '小正0',\n   data: 'anything'\n },\n {\n   imageUrl: './assets/img/200X200.jpg',\n   text: '小正1',\n   data: 'anything'\n }]\n *\n */\nMetro.prototype.bindData = function (newData) {\n  var _this = this;\n  newData.forEach(function (ele, i) {\n    _this.controls[i].setContent(ele.imageUrl, ele.text, ele.data);\n  });\n};","var UIObject = require('../UIObject');\n/**\n * 广告招贴\n *\n *\n * ```javascript\n *\n var xTexture = PIXI.Texture.fromImage('./assets/img/place-holder.png');\n xTexture.baseTexture.on('loaded', function () {\n    var poster = new Tivy.Poster({\n      size: {width: 192, height: 338},\n      stage: stage,\n      showText: true,\n      text: \"中文\",\n      position: {x: 30, y: 30},\n      placeHolderTexture: xTexture,\n      textBgColor: 0x006600,\n      textColor:0xffffff,\n      //imageUrl:'./assets/img/test.png'\n    });\n\n    poster.setContent('./assets/img/test.png', '长发公主');\n\n    window.setTimeout(function () {\n      poster.destroy();\n    }, 10000);\n  });\n\n * ```\n * @class\n * @memberof Tivy\n * @constructor\n * @extends Tivy.UIObject\n * @param options {json} 配置节点\n * ```json\n * {\n *  stage: stage01, //Instance of Stage\n *  size: {width: 300, height: 400},\n *  position: {x: 0, y: 0},\n *  textColor: 0x7f7f7f,\n *  textBgColor: 0xffffff,\n *  textHeight: 50,\n *  font: '25px 迷你简准圆',\n *  text: '标题',\n *  imageUrl: someUrl,\n *  radius: 10,\n *  showText: false\n * }\n * ```\n */\nfunction Poster(options) {\n  if (!options) {\n    options = {};\n  }\n  this.size = options.size = options.size || {width: 300, height: 400};\n  UIObject.call(this, options);\n\n  this.placeHolderTexture = options.placeHolderTexture;\n  if (!this.placeHolderTexture) {\n    throw new Error('placeHolderTexture is null');\n  }\n\n  this.showText      = options.showText || false;\n  this.text          = options.text;\n  this.textColor     = options.textColor || 0x7f7f7f;\n  this.textBgColor   = options.textBgColor || 0xffffff;\n  this.textHeight    = options.textHeight || 50;\n  this.font          = options.font || '25px 迷你简准圆';\n  this.imageUrl      = options.imageUrl;\n  this.radius        = options.radius || 0;\n  this.posterTexture = null;\n  this.imageSprite   = null;\n  this.textLabel     = null;\n  this.posterSetted  = false;\n\n  this._paint();\n}\n\nPoster.prototype             = Object.create(UIObject.prototype);\nPoster.prototype.constructor = Poster;\nmodule.exports               = Poster;\n\n/**\n * 画上去\n *\n * @private\n */\nPoster.prototype._paint = function () {\n  if (this.radius) {\n    var mask = new PIXI.Graphics();\n    mask.lineStyle(0);\n    mask.beginFill(0xffffff);\n    mask.drawRoundedRect(0, 0, this.size.width, this.size.height, this.radius);\n    mask.endFill();\n    this.addChild(mask);\n    this.mask = mask;\n  }\n\n  //背景\n  var g = new PIXI.Graphics();\n  g.lineStyle(0);\n  g.beginFill(this.textBgColor, .5);\n  if (this.showText && this.text) {\n    g.drawRect(0, 0, this.size.width, this.size.height - this.textHeight);\n\n    //文字背景\n    g.beginFill(this.textBgColor, .7);\n    g.drawRect(0, this.size.height - 50, this.size.width, this.textHeight);\n\n    this.textLabel = new PIXI.Text(this.text, {\n      font: this.font,\n      fill: this.textColor\n    });\n\n    this.textLabel.y = this.size.height - this.textHeight + (this.textHeight - this.textLabel.height) / 2;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n\n    g.addChild(this.textLabel);\n  }\n  else {\n    g.drawRect(0, 0, this.size.width, this.size.height);\n  }\n  g.endFill();\n  this.addChild(g);\n\n  this.imageSprite        = new PIXI.Sprite(this.placeHolderTexture);\n  this.imageSprite.width  = this.size.width;\n  this.imageSprite.height = this.showText ? this.size.height - this.textHeight : this.size.height;\n  //this.imageSprite.setInteractive(true);\n\n  if (this.imageUrl) {\n    this.setContent(this.imageUrl);\n  }\n\n  this.addChild(this.imageSprite);\n\n  this.stage.repaint();\n\n};\n\n/**\n * 设置广告招贴的图片和文字\n *\n * @param imgUrl {string} 海报的图片路径\n * @param text {string} 海报的标题\n */\nPoster.prototype.setContent = function (imgUrl, text) {\n  if (imgUrl) {\n    imgUrl                   = imgUrl + '?t=' + (new Date()) * 1;\n    this.posterTexture       = PIXI.Texture.fromImage(imgUrl);\n    this.imageSprite.texture = this.posterTexture;\n    var _stage               = this.stage;\n    this.posterTexture.baseTexture.on('loaded', function () {\n      _stage.repaint();\n    });\n  }\n\n  if (this.showText && text) {\n    this.textLabel.text = text;\n    if (this.textLabel.width > this.size.width) {\n      this.textLabel.x = 10;\n    } else {\n      this.textLabel.x = (this.size.width - this.textLabel.width) / 2;\n    }\n  }\n  this.text         = text;\n  this.posterSetted = true;\n};\n\n\n/**\n * 销毁海报\n * Destroys the poster\n * @param reserveTexture {boolean} 是否保留贴图, 默认不保存\n */\nPoster.prototype.destroy = function (reserveTexture) {\n  this.removeChildren();\n  this.stage.removeChild(this);\n  UIObject.prototype.destroy.call(this, true);\n\n  //this.imageSprite.texture = this.placeHolderTexture;\n  if (!reserveTexture) {\n    if (this.posterTexture && this.posterSetted) {\n      this.posterTexture.destroy(true);\n    }\n  }\n  this.stage.repaint();\n};\n\n","/**\n * 键盘事件管理器, 此类已经混合进 UIObject, 可以直接在 UIObject 示例上进行调用\n * @mixin\n * @class\n * @constructor\n * @memberof Tivy\n */\nfunction KeyboardManager() {\n  /**\n   * 目标 object 是否可以响应键盘事件\n   *\n   * @member {boolean}\n   */\n  this.isActive = false;\n\n\n  /**\n   * 按键区域被激活后\n   * @example\n   * metro.on('activated', function () {});\n   * @event activated\n   * @memberof Tivy.KeyboardManager#\n   */\n\n  /**\n   * 激活区域被取消\n   * @event deactivated\n   * @memberof Tivy.KeyboardManager#\n   */\n  /**\n   * 键盘被按\n   * @event keypress\n   * @memberof Tivy.KeyboardManager#\n   */\n\n  /**\n   * 按键按下\n   * @example\n   * metro.on('keydown', function () {});\n   * @event keydown\n   * @memberof Tivy.KeyboardManager#\n   */\n\n  /**\n   * 按键抬起\n   * @event keyup\n   * @memberof Tivy.KeyboardManager#\n   */\n\n\n}\n\nKeyboardManager.prototype.constructor = KeyboardManager;\nmodule.exports                        = KeyboardManager;\n\n/**\n * 激活按键区域, 并绑定事件\n */\nKeyboardManager.prototype.activate = function () {\n  if (this.isActive) {\n    return;\n  }\n  this.isActive = true;\n\n\n  var _this = this;\n  window.document.addEventListener('keydown', function (keyboardEvent) {\n    _this.emit('keydown', keyboardEvent);\n  }, true);\n  window.document.addEventListener('keyup', function (keyboardEvent) {\n    _this.emit('keyup', keyboardEvent);\n  }, true);\n  window.document.addEventListener('keypress', function (keyboardEvent) {\n    _this.emit('keypress', keyboardEvent);\n  }, true);\n\n  this.emit('activated');\n};\n\n/**\n * 取消激活\n */\nKeyboardManager.prototype.deactivate = function () {\n  if (!this.isActive) {\n    return;\n  }\n\n\n  this.isActive = false;\n  window.document.removeEventListener('keydown');\n  window.document.removeEventListener('keyup');\n  window.document.removeEventListener('keypress');\n\n  this.emit('deactivated');\n\n};\n","var tivy = module.exports = {\n  UIObject       : require('./UIObject'),\n  UIObjectGroup  : require('./UIObjectGroup'),\n  Stage          : require('./Stage'),\n  Button         : require('./basic/Button'),\n  Tile           : require('./basic/Tile'),\n  ImageFrame     : require('./basic/ImageFrame'),\n  Poster         : require('./components/Poster'),\n  Metro          : require('./components/Metro'),\n  KeyboardManager: require('./events/KeyboardManager'),\n};\n\n//mixin tow class\nObject.assign(\n  tivy.UIObject.prototype,\n  tivy.KeyboardManager.prototype\n);\n\n\nglobal.Tivy = tivy;\n"],"sourceRoot":"./"}